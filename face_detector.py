# -*- coding: utf-8 -*-
"""face_detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tjPQT77YP3I_Yu3Ima1h0dQj_ZaZfwo1
"""

# Face recognition Model
!pip install tensorflow==1.14.0
# Step 1  detect faces and extract the faces so as to feed to FaceNet Model

# import required libraries

import os, cv2
import matplotlib.pyplot as plt
import numpy as np
from PIL import Image

from zipfile import ZipFile
file = 'dataset.zip'
with ZipFile(file,'r') as f:
  f.extractall()

!pip install mtcnn

from mtcnn import MTCNN

def extract_face(filePath, required_size = (160,160)):
  image = Image.open(filePath)
  image = image.convert('RGB')
  pixels = np.asarray(image)
  detector = MTCNN()
  result = detector.detect_faces(pixels)
  if (len(result) < 1):
    return None
  x1,y1, width, height = (result[0]['box'])
  x1, y1 = abs(x1), abs(y1)
  x2,y2 = x1+width,y1+height
  face = pixels[y1:y2,x1:x2]
  image = Image.fromarray(face)
  image = image.resize((160, 160))
  face_array = np.asarray(image)
  return face_array

path = os.path.join('dataset','test_data','priyanka matekar','matu1.jpeg')
plt.imshow(extract_face(path))

def load_faces(folderPath):
  faces = list()

  for file in os.listdir(folderPath):
    path = os.path.join(folderPath, file)
    face = extract_face(path)
    if face.any() == None:
      continue
    faces.append(face)
  return faces

# load dataset into X,Y

def load_dataset(dirname):
  X,y = list(), list()
  folders = os.listdir(dirname)

  for folder in folders:
    folderpath = os.path.join(dirname, folder)
    if not os.path.isdir(folderpath):
      continue
    
    faces = load_faces(folderpath)
    #create lables
    labels = [folder for i in range(len(faces))]

    X.extend(faces), y.extend(labels)
    print('loaded %d files from %s folder'%(len(faces), folder))

  return np.asarray(X), np.asarray(y)



# load training data
x_train, y_train = load_dataset('dataset/train_data')

x_train.shape, y_train.shape

#load test data
x_test, y_test = load_dataset('dataset/test_data')

import numpy
numpy.savez_compressed('faces.npz',x_train, y_train, x_test, y_test)

import random as rd

# plot some random faces from dataset
for i in range(1,15):
  random_face = rd.randint(0,117)
  face = x_train[random_face]
  plt.subplot(2,7,i)
  plt.axis('off')
  plt.imshow(face)
  
plt.show()

